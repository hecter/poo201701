package modelo.lectura;
// Generated May 12, 2017 7:15:35 PM by Hibernate Tools 4.3.1


import basededatos.BaseDatosOracle;
import basededatos.Secuencia;
import static basededatos.Secuencia.nextVal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 * Sectores generated by hbm2java
 */
public class Sector{

    private long id;
    private String det;

    public Sector() {
    }

    public Sector(long id, String det) {
        this.id = id;
        this.det = det;
    }

    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getDet() {
        return this.det;
    }

    public void setDet(String det) {
        this.det = det;
    }
    
    public int insertar() throws SQLException{
        long secuencia = nextVal("SECTORES_SEQ");
        System.err.println("intente con: "+secuencia);
         BaseDatosOracle basededatos;
        basededatos = BaseDatosOracle.getInstance();
        String sql;
        int ejecucion;
        sql = "INSERT INTO SECTORES (ID,DET) VALUES (?,?)";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        basededatos.asignarParametro(1, secuencia);
        basededatos.asignarParametro(2, getDet());
        ejecucion = basededatos.ejecutar();
        basededatos.cerrarSentencia();
        return ejecucion;
    }
    
    public int actualizar() throws SQLException{
       BaseDatosOracle basededatos;
        basededatos = BaseDatosOracle.getInstance();
        String sql;
        int ejecucion;
        sql = "UPDATE SECTORES SET DET = ? WHERE ID = ?";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        basededatos.asignarParametro(1, getDet());
        basededatos.asignarParametro(2, getId());
        ejecucion = basededatos.ejecutar();
        basededatos.cerrarSentencia();
        return ejecucion;
    }
    
    public int eliminar() throws SQLException{
        BaseDatosOracle basededatos;
        basededatos = BaseDatosOracle.getInstance();
        String sql;
        int ejecucion;
        sql = "DELETE FROM SECTORES WHERE ID = ?";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        basededatos.asignarParametro(1, getId());
        ejecucion = basededatos.ejecutar();
        basededatos.cerrarSentencia();
        return ejecucion;
    }
    
    public static ArrayList<Sector> listar() throws SQLException {
        ArrayList<Sector> datos = new ArrayList<>();
        BaseDatosOracle basededatos;
        ResultSet cursor;
        String sql;
        basededatos = BaseDatosOracle.getInstance();
        sql = "SELECT ID, DET FROM SECTORES";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        cursor = basededatos.ejecutarQuery();
        datos.clear();
        while (cursor.next()) {
            datos.add(new Sector(
                            cursor.getLong("ID"), 
                            cursor.getString("DET")
                    )
            );
        }
        return datos;
    }
    
    public static Sector listar(long id) throws SQLException {
        Sector dato = null;
        BaseDatosOracle basededatos;
        ResultSet cursor;
        String sql;
        basededatos = BaseDatosOracle.getInstance();
        sql = "SELECT DET FROM SECTORES WHERE ID = ?";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        basededatos.asignarParametro(1, id);
        cursor = basededatos.ejecutarQuery();
        if (cursor.next()) {
            dato = new Sector(id, cursor.getString("DET"));
        }
        return dato;
    }
    
    public static ArrayList<Sector> listar(String det) throws SQLException {
        ArrayList<Sector> datos = new ArrayList<>();
        BaseDatosOracle bd = BaseDatosOracle.getInstance();
        String sql = "SELECT ID, DET FROM SECTORES WHERE DET LIKE ?";
        bd.conectar();
        bd.prepararSql(sql);
        bd.asignarParametro(1, "%"+det+"%");
        ResultSet reg = bd.ejecutarQuery();
        datos.clear();
        while (reg.next()) {
            datos.add(new Sector(reg.getLong("ID"), reg.getString("DET")));
        }
        return datos;
    }
}
