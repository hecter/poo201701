package modelo.lectura;
// Generated May 12, 2017 7:15:35 PM by Hibernate Tools 4.3.1


import basededatos.BaseDatosOracle;
import static basededatos.Secuencia.nextVal;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 * Sectores generated by hbm2java
 */
public class Sector{

    private BigDecimal id;
    private String det;

    public Sector() {
    }

    public Sector(BigDecimal id, String det) {
        this.id = id;
        this.det = det;
    }

    public BigDecimal getId() {
        return this.id;
    }

    public void setId(BigDecimal id) {
        this.id = id;
    }

    public String getDet() {
        return this.det;
    }

    public void setDet(String det) {
        this.det = det;
    }
    
    public int insertar() throws SQLException{
         BaseDatosOracle basededatos;
        basededatos = BaseDatosOracle.getInstance();
        String sql;
        int ejecucion;
        sql = "INSERT INTO SECTORES (ID,DET) VALUES (?.?)";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        basededatos.asignarParametro(1, new BigDecimal(nextVal("SECTORES_SEQ")));
        basededatos.asignarParametro(2, getDet());
        ejecucion = basededatos.ejecutar();
        basededatos.cerrarSentencia();
        return ejecucion;
    }
    
    public int actualizar() throws SQLException{
       BaseDatosOracle basededatos;
        basededatos = BaseDatosOracle.getInstance();
        String sql;
        int ejecucion;
        sql = "UPDATE SECTORES SET DET = ? WHERE ID = ?";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        basededatos.asignarParametro(1, getDet());
        basededatos.asignarParametro(2, getId());
        ejecucion = basededatos.ejecutar();
        basededatos.cerrarSentencia();
        return ejecucion;
    }
    
    public int eliminar() throws SQLException{
        BaseDatosOracle basededatos;
        basededatos = BaseDatosOracle.getInstance();
        String sql;
        int ejecucion;
        sql = "DELETE FROM SECTORES WHERE ID = ?";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        basededatos.asignarParametro(1, getId());
        ejecucion = basededatos.ejecutar();
        basededatos.cerrarSentencia();
        return ejecucion;
    }
    
    public ArrayList<Sector> listar() throws SQLException {
        ArrayList<Sector> datos = new ArrayList<>();
        BaseDatosOracle basededatos;
        ResultSet cursor;
        String sql;
        basededatos = BaseDatosOracle.getInstance();
        sql = "SELECT ID, DET FROM SECTORES";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        cursor = basededatos.ejecutarQuery();
        datos.clear();
        while (cursor.next()) {
            datos.add(new Sector(
                            cursor.getBigDecimal("ID"), 
                            cursor.getString("DET")
                    )
            );
        }
        return datos;
    }
}
