package modelo.lectura;
// Generated May 12, 2017 7:15:35 PM by Hibernate Tools 4.3.1


import basededatos.BaseDatosOracle;
import static basededatos.Secuencia.nextVal;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.ArrayList;
import modelo.atencion.Casa;

/**
 * Medidores generated by hbm2java
 */
public class Medidor {


     private BigDecimal id;
     private Casa casas;
     private String serial;
     private BigDecimal costo;

    public Medidor() {
    }

	
    public Medidor(BigDecimal id, Casa casas, String serial, BigDecimal costo) {
        this.id = id;
        this.casas = casas;
        this.serial = serial;
        this.costo = costo;
    }
   
    public BigDecimal getId() {
        return this.id;
    }
    
    public void setId(BigDecimal id) {
        this.id = id;
    }
    public Casa getCasas() {
        return this.casas;
    }
    
    public void setCasas(Casa casas) {
        this.casas = casas;
    }
    public String getSerial() {
        return this.serial;
    }
    
    public void setSerial(String serial) {
        this.serial = serial;
    }
    public BigDecimal getCosto() {
        return this.costo;
    }
    
    public void setCosto(BigDecimal costo) {
        this.costo = costo;
    }

    public int insertar() throws SQLException{
         BaseDatosOracle basededatos;
        basededatos = BaseDatosOracle.getInstance();
        String sql;
        int ejecucion;
        sql = "INSERT INTO MEDIDORES (ID,SERIAL,COSTO,CASA_ID) "
                + "VALUES(?,?,?,?)";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        basededatos.asignarParametro(1, new BigDecimal(nextVal("SECTORES_SEQ")));
        basededatos.asignarParametro(2, getSerial());
        basededatos.asignarParametro(3, getCosto());
        basededatos.asignarParametro(4, getCasas().getId());
        ejecucion = basededatos.ejecutar();
        basededatos.cerrarSentencia();
        return ejecucion;
    }
    
    public int actualizar() throws SQLException{
       /*BaseDatosOracle basededatos;
        basededatos = BaseDatosOracle.getInstance();
        String sql;
        int ejecucion;
        sql = "UPDATE SECTORES SET DET = ? WHERE ID = ?";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        basededatos.asignarParametro(1, getDet());
        basededatos.asignarParametro(2, getId());
        ejecucion = basededatos.ejecutar();
        basededatos.cerrarSentencia();
        return ejecucion;*/
       return 0;
    }
    
    public int eliminar() throws SQLException{
        /*BaseDatosOracle basededatos;
        basededatos = BaseDatosOracle.getInstance();
        String sql;
        int ejecucion;
        sql = "DELETE FROM SECTORES WHERE ID = ?";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        basededatos.asignarParametro(1, getId());
        ejecucion = basededatos.ejecutar();
        basededatos.cerrarSentencia();
        return ejecucion;*/
        return 0;
    }
    
    public ArrayList<Sector> listar() throws SQLException {
        /*ArrayList<Sector> datos = new ArrayList<>();
        BaseDatosOracle basededatos;
        ResultSet cursor;
        String sql;
        basededatos = BaseDatosOracle.getInstance();
        sql = "SELECT ID, DET FROM SECTORES";
        basededatos.conectar();
        basededatos.prepararSql(sql);
        cursor = basededatos.ejecutarQuery();
        datos.clear();
        while (cursor.next()) {
            datos.add(
                    new Sector(
                            cursor.getBigDecimal("ID"), 
                            cursor.getString("DET")
                    )
            );
        }
        return datos;*/
        return null;
    }
}

