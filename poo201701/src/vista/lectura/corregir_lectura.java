/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.lectura;

import static JTable.Tablas.limpiarTabla;
import static Messages.Mensajes.msn;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.lectura.Lectura;
import modelo.lectura.Periodo;

/**
 *
 * @author 20102122476
 */
public class corregir_lectura extends javax.swing.JFrame/*FormTemplate*/ {
    /**
     * Creates new form sector
     */
    public corregir_lectura() {
        setDefaultCloseOperation(
                javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE
        );
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                close();
            }
        });
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        loadPeriodos();
        limpiar();
    }
    
    private void close(){
        int respuesta =  JOptionPane.showConfirmDialog(
                this, 
                "Â¿ Realmente Deseas Salir ?", "GAS COLOMBIA", 
                JOptionPane.YES_NO_OPTION
        ); 
        if(respuesta==0){
            dispose();
        }
    }   
    
    public void limpiar(){
        txserial.setText("");
        txlectura.setText("");
        txcausal.setText("NINGUNA");
        txserial.requestFocus();
    }
    
    public void loadPeriodos(){
        txperiodos.removeAllItems();
        try {            
            ArrayList<Periodo> listado;
            listado = Periodo.listar();
            if (!listado.isEmpty()) {
                listado.stream().forEach((dato) -> {
                    txperiodos.addItem(String.valueOf(dato.getPeriodo()));
                });
            }   
        } catch (SQLException ex) {
            msn(this, ex.getMessage(), "ERROR", 0);
        }
    }
    
    public void loadTable(long suscriptor,long periodo){
        limpiarTabla(tablaDatos);
        try {            
            ArrayList<String> listado;
            listado = Lectura.ListarPorCorregir(suscriptor,periodo);
            if (!listado.isEmpty()) {
                listado.stream().forEach((dato) -> {
                    String[] array = dato.split("\\;");
                    DefaultTableModel tb = (DefaultTableModel) tablaDatos.getModel();
                    Vector datos = new Vector();
                    datos.add(array[0]);
                    datos.add(array[1]);
                    datos.add(array[2]);
                    datos.add(array[3]);
                    datos.add(array[4]);
                    datos.add(array[5]);
                    datos.add(array[6]);
                    datos.add(array[7]);
                    datos.add(array[8]);
                    tb.addRow(datos);
                });
            } else {
                msn(this, "BUSQUEDA SIN REGISTROS", "ERROR EN LA TABLA", 0);
            }
        } catch (SQLException ex) {
            msn(this, ex.getMessage(), "ERROR", 0);
        }
    }
    
    public void buscar(){
        String x =txperiodos.getSelectedItem().toString();
        long psel = Long.parseLong(x);
        if(txsuscriptor.getText().length()!=0){
            long suscriptor = Long.parseLong(txsuscriptor.getText());
            loadTable(suscriptor,psel);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDatos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txserial = new javax.swing.JTextField();
        btinsertar = new javax.swing.JButton();
        btlimpiar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txlectura = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txcausal = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btreload = new javax.swing.JButton();
        txperiodos = new javax.swing.JComboBox<>();
        txsuscriptor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txidregistro = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        tablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "LECTURA", "FECHA", "CAUSAL", "ESTADO", "MEDIDOR_SERIAL", "CASA_DIRECCION", "SECTOR_DET", "SUSCRIPTOR"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaDatos);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 0, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Formulario Corregir Lectura");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jLabel3.setText("Serial Medidor: ");

        btinsertar.setText("CORREGIR");
        btinsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btinsertarActionPerformed(evt);
            }
        });

        btlimpiar.setText("Limpiar");
        btlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlimpiarActionPerformed(evt);
            }
        });

        jLabel4.setText("Lectura: ");

        jLabel5.setText("Causal: ");

        txcausal.setText("NINGUNA");

        jLabel7.setText("Periodo:");

        btreload.setText("Buscar");
        btreload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btreloadActionPerformed(evt);
            }
        });

        jLabel2.setText("Id Cliente: ");

        txidregistro.setEditable(false);
        txidregistro.setBackground(new java.awt.Color(204, 255, 204));

        jLabel6.setText("# Registro: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txidregistro, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txsuscriptor, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txperiodos, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txlectura)
                            .addComponent(txserial)
                            .addComponent(txcausal)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 200, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btlimpiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btinsertar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btreload, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txperiodos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txsuscriptor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txidregistro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txserial, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txlectura, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txcausal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btinsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btreload, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btlimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(34, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btinsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btinsertarActionPerformed
        if (txidregistro.getText().length() != 0) {
            if (txlectura.getText().length()==0) {
                txcausal.setText("NINGUNA");
            }
            try {
                long idl = Long.parseLong(txidregistro.getText());//idlectura
                if (txcausal.getText().equals("NINGUNA")) {
                    int s = txserial.getText().length();//serial
                    int l = txlectura.getText().length();//lectura
                    if (s != 0 & l != 0) {
                        int lect = Integer.parseInt(txlectura.getText());
                        Lectura lectura = new Lectura(idl, lect);
                        int leidos = lectura.leerLectura();
                        if (leidos > 0) {
                            buscar();
                            msn(this, "REGISTRO MODIFICADO", "MENSAJE", 1);
                        } else {
                            msn(this, "NO SE ALMACENO LA LECTURA\n"
                                    + "POR FAVOR INTENTELO NUEVAMENTE\n"
                                    + "SI EL ERROR CONTINUA POR FAVOR "
                                    + "INFORME AL AREA ENCARGADA", "ERROR", 0);
                        }
                    } else {
                        msn(this, "DEBES DIGITAL EL SERIAL DEL MEDIDOR\n"
                                + "JUNTO CON LA LECTURA", "ERROR", 0);
                    }
                } else//no se pudo leer
                {
                    if (txcausal.getText().length() != 0) {
                        Lectura obj = new Lectura(idl, txcausal.getText());
                        int leidos = obj.leerLecturaExcepcion();
                        if (leidos > 0) {
                            buscar();
                            msn(this, "REGISTRO MODIFICADO", "MENSAJE", 1);
                        } else {
                            msn(this, "NO SE ALMACENO LA CAUSAL DE NO LECTURA\n"
                                    + "POR FAVOR INTENTELO NUEVAMENTE\n"
                                    + "SI EL ERROR CONTINUA POR FAVOR INFORME\n "
                                    + "AL AREA ENCARGADA", "ERROR", 0);
                        }
                    } else {
                        msn(this, "AL NO PODER REALIZAR LA LECTURA\n"
                                + "DEBE ESPECIFICAR LA CAUSAL", "ERROR", 0);
                    }
                }
            } catch (SQLException ex) {
                msn(this, ex.getMessage(), "ERROR", 0);
            }
        } else {
            msn(this, "ERROR AL OBTENER ID DE REGISTRO\n"
                    + "POR FAVOR INTENTELO NUEVAMENTE\n"
                    + "SI EL ERROR CONTINUA POR FAVOR "
                    + "INFORME AL AREA ENCARGADA", "ERROR", 0);
        }
    }//GEN-LAST:event_btinsertarActionPerformed

    private void tablaDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDatosMouseClicked
        // TODO add your handling code here:
        try{
            int fila = tablaDatos.getSelectedRow();
            txserial.setText(tablaDatos.getValueAt(fila, 5).toString());
            txcausal.setText(tablaDatos.getValueAt(fila, 3).toString());
            txidregistro.setText(tablaDatos.getValueAt(fila, 0).toString());
            String s = tablaDatos.getValueAt(fila, 1).toString();
            if (s.equals("POR ASIGNAR")) {
                txlectura.setText("");
            }else{
                txlectura.setText(s);
            }
        }catch(Exception ex){}
    }//GEN-LAST:event_tablaDatosMouseClicked

    private void btlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btlimpiarActionPerformed

    private void btreloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btreloadActionPerformed
        // TODO add your handling code here:
        buscar();
    }//GEN-LAST:event_btreloadActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btinsertar;
    private javax.swing.JButton btlimpiar;
    private javax.swing.JButton btreload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaDatos;
    private javax.swing.JTextField txcausal;
    private javax.swing.JTextField txidregistro;
    private javax.swing.JTextField txlectura;
    private javax.swing.JComboBox<String> txperiodos;
    private javax.swing.JTextField txserial;
    private javax.swing.JTextField txsuscriptor;
    // End of variables declaration//GEN-END:variables
}
